/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/api/places': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** @description 개소 목록 조회 */
        get: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody?: never
            responses: {
                200: components['responses']['Ok']
            }
        }
        put?: never
        /** @description 개소 등록 */
        post: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody: {
                content: {
                    'application/json': components['schemas']['Place']
                }
            }
            responses: {
                201: components['responses']['Created']
            }
        }
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/api/places/{seq}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post?: never
        /** @description 개소 삭제 */
        delete: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody?: never
            responses: {
                204: components['responses']['NotContent']
            }
        }
        options?: never
        head?: never
        /** @description 개소 수정 */
        patch: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody: {
                content: {
                    'application/json': components['schemas']['Place'] & unknown
                }
            }
            responses: {
                204: components['responses']['NotContent']
            }
        }
        trace?: never
    }
    '/api/categories': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** @description 카테고리 목록 조회 */
        get: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody?: never
            responses: {
                200: components['responses']['Ok']
            }
        }
        put?: never
        /** @description 카테고리 등록 */
        post: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody: {
                content: {
                    'application/json': components['schemas']['Category']
                }
            }
            responses: {
                201: components['responses']['Created']
            }
        }
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/api/categories/{seq}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post?: never
        /** @description 카테고리 삭제 */
        delete: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody?: never
            responses: {
                204: components['responses']['NotContent']
            }
        }
        options?: never
        head?: never
        /** @description 카테고리 수정 */
        patch: {
            parameters: {
                query?: never
                header?: never
                path?: never
                cookie?: never
            }
            requestBody: {
                content: {
                    'application/json': components['schemas']['Category'] & unknown
                }
            }
            responses: {
                204: components['responses']['NotContent']
            }
        }
        trace?: never
    }
}
export type webhooks = Record<string, never>
export interface components {
    schemas: {
        Layer: {
            /** @description 레이어 SEQ */
            seq?: number
            /** @description 이름 */
            name?: string
            /** @description 유형 */
            type?: string
            /** @description 정보 */
            config?: string
            /** @description 레이어 대표 아이콘 정보
             *     interface iconConfig (
             *       type: 'FA' | 'TEXT' | 'IMG'
             *       value: string
             *       color: string
             *       bgColor: string
             *     ) */
            iconConfg?: string
            /** @description 추가정보 */
            options?: string
            /** @description 생성자 */
            createdBy?: string
            /** @description 수정자 */
            updatedBy?: string
            /** @description 생성일시 */
            createdAt?: string
            /** @description 수정일시 */
            updatedAt?: string
        }
        Facility: {
            /** @description 시퀀스 */
            seq?: number
            /** @description 시설물명 */
            name?: string
            /** @description 아이콘 설정
             *     interface iconConfig (
             *       iconType: 'FA' | 'TEXT' | 'IMG'
             *       iconValue: string
             *       color: string
             *       bgColor: string
             *     ) */
            iconConfig?: string
            /** @description 위도 */
            latitude?: string
            /** @description 경도 */
            longitude?: string
            /** @description 추가정보 */
            options?: string
            /** @description 생성자 */
            createdBy?: string
            /** @description 수정자 */
            updatedBy?: string
            /** @description 생성시간 */
            createdAt?: string
            /** @description 수정시간 */
            updatedAt?: string
        }
        Camera: {
            /** @description 카메라 Seq */
            seq?: number
            /** @description NVR Seq */
            placeSeq?: number
            /** @description 개소 시퀀스 */
            name?: string
            /** @description (UQ)NVR Camera Id */
            type?: string
            /** @description CCTV 명 */
            isOn?: boolean
            /** @description CCTV 타입
             *     FIXED(고정) | PTZ(회전), OPT(외장 회전형 */
            isPlaceMain?: boolean
            /** @description CCTV 상태
             *     ON | OFF */
            ip?: string
            /** @description RTSP 고해상도 */
            latitude?: string
            /** @description RTSP 저해상도 */
            longitude?: string
            /** @description CCTV IP */
            addrDetail?: string
            /** @description CCTV 모델 */
            model?: string
            /** @description 위도 */
            manufacture?: string
            /** @description 경도 */
            options?: string
            /** @description 설치일자 */
            createdBy?: string
            /** @description 상세 주소 */
            updatedBy?: string
            /** @description 메인카메라 여부 */
            createdAt?: string
            /** @description 추가정보
             *     interface Options {
             *       degree: number
             *     } */
            updatedAt?: string
        }
        Category: {
            /** @description 카테고리 SEQ */
            seq?: string
            /** @description path */
            path?: string
            /** @description 범주 */
            class?: string
            /** @description 이름 */
            ctgNm?: string
            /** @description 깊이 */
            depth?: string
            /** @description 아이콘 정보;
             *     interface iconConfig (
             *       type: 'FA' | 'TEXT' | 'IMG'
             *       value: string
             *       color: string
             *       bgColor: string
             *     ) */
            iconConfig?: string
            /** @description 추가정보 */
            options?: string
            /** @description 생성자 */
            createdBy?: string
            /** @description 수정자 */
            updatedBy?: string
            /** @description 생성일시 */
            createdAt?: string
            /** @description 수정일시 */
            updatedAt?: string
        }
        Favorite: {
            seq?: number
            name?: string
            latitude?: string
            longitude?: string
            zoom?: string
            options?: string
            createdBy?: string
            updatedBy?: string
            createdAt?: string
            updatedAt?: string
        }
        Role: {
            /** @description 역할 Seq */
            id?: string
            /** @description 역할 명 */
            options?: string
            /** @description 추가 정보 */
            createdBy?: string
            /** @description 생성자 */
            updatedBy?: string
            /** @description 수정자 */
            createdAt?: string
            /** @description 생성일시 */
            updatedAt?: string
        }
        MapCategoryPlace: {
            /** @description 카테고리 SEQ */
            ctgSeq?: string
            /** @description 개소 SEQ */
            placeSeq?: number
        }
        Channel: {
            /** @description 채널 SEQ */
            seq?: string
            /** @description 그룹핑 SEQ */
            grpSeq?: string
            /** @description 채널 상태 */
            isConn?: boolean
            /** @description 마지막 접속 IP */
            lastConnIp?: string
            /** @description 마지막 접속 일시 */
            lastConnAt?: string
            /** @description 사용 여부 */
            options?: string
            /** @description 추가 정보 */
            createdBy?: string
            /** @description 생성자 */
            updatedBy?: string
            /** @description 수정자 */
            createdAt?: string
            /** @description 생성일시 */
            updatedAt?: string
        }
        Setting: {
            seq?: string
            grpSeq?: string
            config?: string
            dftConfig?: string
            createdBy?: string
            updatedBy?: string
            createdAt?: string
            updatedAt?: string
        }
        Place: {
            /** @description 개소 SEQ */
            seq?: number
            /** @description 이름 */
            name?: string
            /** @description 위도 */
            latitude?: string
            /** @description 경도 */
            longitude?: string
            /** @description 상세주소 */
            addrDetail?: string
            /** @description 추가정보 */
            options?: string
            /** @description 생성자 */
            createdBy?: string
            /** @description 수정자 */
            updatedBy?: string
            /** @description 생성일시 */
            createdAt?: string
            /** @description 수정일시 */
            updatedAt?: string
            /** @description 카메라 목록 */
            cameras?: components['schemas']['Camera'][]
        }
        UserGroup: {
            seq?: string
            roleId?: string
            name?: string
            options?: string
            createdBy?: string
            updatedBy?: string
            createdAt?: string
            updatedAt?: string
        }
        NvrCamera: {
            id?: string
            nvrSeq?: string
            camSeq?: number
            isLive?: boolean
            resolution?: string
            options?: string
            createdBy?: string
            updatedBy?: string
            createdAt?: string
            updatedAt?: string
        }
        User: {
            /** @description 사용자 ID */
            id?: string
            /** @description 역할 */
            userGrpSeq?: string
            /** @description 사용자 비밀번호 */
            password?: string
            /** @description 사용자 명 */
            name?: string
            /** @description 회사 */
            company?: string
            /** @description 부서 */
            division?: string
            /** @description 연락처 */
            tellNo?: string
            /** @description 로그인 실패 횟수 */
            loginFailCnt?: string
            /** @description 로그인 실패 일시 */
            loginFailAt?: string
            /** @description 로그인 상태 */
            isLogin?: boolean
            /** @description 사용여부 */
            isUse?: boolean
            /** @description 마지막 로그인 시간 */
            loginAt?: string
            /** @description 마지막 비밀번호 업데이트 시간 */
            pwUpdatedAt?: string
            /** @description 추가정보 */
            options?: string
            /** @description 생성자 */
            createdBy?: string
            /** @description 수정자 */
            updatedBy?: string
            /** @description 생성일시 */
            createdAt?: string
            /** @description 수정일시 */
            updatedAt?: string
        }
        MapCameraGrouping: {
            /** @description 카메라 SEQ */
            camSeq?: number
            /** @description 그룹핑 SEQ */
            grpSeq?: string
        }
        Nvr: {
            /** @description NVR SEQ */
            seq?: string
            /** @description 이름 */
            name?: string
            /** @description IP */
            ip?: string
            /** @description 포트 */
            port?: number
            /** @description 추가정보 */
            isOn?: boolean
            /** @description 생성자 */
            options?: string
            /** @description 수정자 */
            createdBy?: string
            /** @description 생성일시 */
            updatedBy?: string
            /** @description 수정일시 */
            createdAt?: string
            updatedAt?: string
        }
        Sw: {
            /** @description 소프트웨어 SEQ */
            id?: string
            /** @description 이름 */
            options?: string
            /** @description 추가정보 */
            createdBy?: string
            /** @description 생성자 */
            updatedBy?: string
            /** @description 수정자 */
            createdAt?: string
            /** @description 생성일시 */
            updatedAt?: string
        }
        Grouping: {
            /** @description 그룹핑 SEQ */
            seq?: string
            /** @description 소프트웨어 SEQ */
            swId?: string
            /** @description 사용자 SEQ */
            roleId?: string
            /** @description 역할 SEQ */
            userGrpSeq?: string
            /** @description 대상
             *     참조키 외에 그룹핑 대상이 있을 때 사용 */
            userId?: string
            /** @description 추가정보 */
            target?: string
        }
    }
    responses: {
        /** @description 성공 (OK) */
        Ok: {
            headers: {
                [name: string]: unknown
            }
            content?: never
        }
        /** @description 성공 (Created) */
        Created: {
            headers: {
                Location?: string
                [name: string]: unknown
            }
            content?: never
        }
        /** @description 성공 (Not Content) */
        NotContent: {
            headers: {
                [name: string]: unknown
            }
            content?: never
        }
    }
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
}
export type $defs = Record<string, never>
export type operations = Record<string, never>
